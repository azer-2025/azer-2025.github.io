{"title":"exo快速搭建","uid":"29aa7dffd103c1af4376598c494811aa","slug":"hexo快速搭建","date":"2025-10-26T05:40:38.000Z","updated":"2025-10-26T06:05:43.043Z","comments":true,"path":"api/articles/hexo快速搭建.json","keywords":"VUE、Python、JAVA","cover":"/medias/fm.png","content":"<p>Hexo快速搭建</p>\n<h1 id=\"Hexo-Next部署github搭建个人博客-优化全过程（完整详细版）\"><a href=\"#Hexo-Next部署github搭建个人博客-优化全过程（完整详细版）\" class=\"headerlink\" title=\"Hexo+Next部署github搭建个人博客+优化全过程（完整详细版）\"></a>Hexo+Next部署github搭建个人博客+优化全过程（完整详细版）</h1><ol start=\"0\">\n<li>前置内容</li>\n</ol>\n<hr>\n<ol>\n<li><strong>git 的下载</strong>： 官网下载较慢，这边推荐阿里镜像下载：</li>\n</ol>\n<p><a href=\"https://registry.npmmirror.com/binary.html?path=git-for-windows/\">阿里镜像下载 git</a></p>\n<p>往下滑选择接近当前日期的最新版本 2.39.2 windows</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026135958273.png\" alt=\"image-20251026135958273\"></p>\n<p>选择 2.39.2 -64 的exe下载，大概有 50Mb大小</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140010715.png\" alt=\"image-20251026140010715\"></p>\n<p>下载好后，直接<strong>一直点下一步即可</strong>。如果你了解过git，则可以按照自己的习惯下载，这不重要。</p>\n<ol>\n<li><strong>Nodejs下载</strong></li>\n</ol>\n<p>直接百度搜索 Nodejs，<a href=\"https://nodejs.org/en/\">Nodejs下载</a></p>\n<p>选择 18.14.2 的 LTS版本下载</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140021442.png\" alt=\"image-20251026140021442\"></p>\n<ol>\n<li>hexo 创建个人博客</li>\n</ol>\n<hr>\n<p>hexo是什么？</p>\n<ul>\n<li>正如hexo的首页所显示的，它是一款非常快速，简介，高效的博客框架平台，我们可以利用hexo快速生成博客网站的模板，然后部署为我们自己的博客网站。</li>\n</ul>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140035344.png\" alt=\"image-20251026140035344\"></p>\n<p>直接进入操作：</p>\n<ol>\n<li><strong>在任意盘符中新建 hexo 文件夹</strong>，这里我创建在了E盘</li>\n</ol>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140123093.png\" alt=\"image-20251026140123093\"></p>\n<ol>\n<li><p><strong>打开hexo文件夹，空白的地方右键，选择 Git Bash Here</strong> ，即我们使用 git 环境创建 hexo的blog模板（必须提前安装好 git），打开后如下图所示：<strong>&#x2F; E &#x2F; hexo表示当前操作位置在 E盘的 hexo文件夹中</strong></p>\n</li>\n<li><p><strong>在 git窗口中依次输入以下命令</strong></p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd blog</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>全部输入完成后，hexo 文件夹 中便会生成一个 blog 子文件夹，并且blog文件夹里面包含有很多信息：</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140152550.png\" alt=\"image-20251026140152550\"></p>\n<p>关于这些文件夹，做一个简单的介绍：</p>\n<ul>\n<li>node_modules: 依赖包</li>\n<li>public：存放生成的页面</li>\n<li>scaffolds：生成文章的一些模板</li>\n<li>source：用来存放你的文章</li>\n<li>themes：主题</li>\n</ul>\n<p>然后输入这两条命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>完成后会显示如下内容，则说明<strong>配置成功</strong>!</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140208911.png\" alt=\"image-20251026140208911\"></p>\n<p>在 git 中输入 Ctrl+C 即可关闭hexo s的内容。</p>\n<p>打开浏览器，在浏览器输入 <strong>localhost:4000</strong> 即可进入你的<strong>初始默认博客</strong></p>\n<p>它长这样：</p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140224194.png\" alt=\"image-20251026140224194\"></p>\n<p>注意：这只是一个<strong>离线版本的博客</strong> ，只能你自己看见，因此我们还需要 GitHub 或者 gittee提供的 ssh功能将他变为对外开放的。</p>\n<ol start=\"2\">\n<li>GitHub创建仓库</li>\n</ol>\n<hr>\n<ol>\n<li>首先注册一个GitHub的仓库，然后在<strong>个人主页中选择 new 新建仓库</strong></li>\n</ol>\n<p>注意： 仓库名称的<strong>前半部分与你的用户名一致</strong>，即 lummod，<strong>后半部分 为 .git.io 固定格式</strong>（忽略红色警告，因为我已经创建过了！），可以选择一个readme为说明文件（随便），然后<strong>点击创建仓库</strong></p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140300079.png\" alt=\"image-20251026140300079\"></p>\n<ol>\n<li>回到 git bash黑窗口中，<strong>输入以下两个命令</strong>（逐条）：</li>\n</ol>\n<p>yourname改为你的<strong>GitHub的用户名</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot;</span><br></pre></td></tr></table></figure>\n\n<p>youremail改为你的<strong>注册GitHub时的邮箱</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>\n\n<p>一定不要输入错，这样github才能检查到这个用户属于你</p>\n<ol>\n<li><strong>创建 ssh，输入命令，然后一直回车</strong></li>\n</ol>\n<p>youremail改为你的<strong>注册GitHub时的邮箱</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>\n\n<p>之后会提示你已完成 ssh的创建，在文件中找到这个路径</p>\n<p><code>C:\\Users\\username\\.ssh</code></p>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140433274.png\" alt=\"image-20251026140433274\"></p>\n<p>记住这两个文件</p>\n<ol>\n<li>在 GitHub的 Setting里面，找到 SSH keys，<strong>把 id_rsa.pub 里面的内容全部复制到 key 进去</strong>，title随便写一个就行</li>\n</ol>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140501797.png\" alt=\"image-20251026140501797\"></p>\n<p>操作完成后，就成功了。</p>\n<ol start=\"3\">\n<li>hexo部署到GitHub</li>\n</ol>\n<hr>\n<ol>\n<li>在 blog文件夹下面找到 <strong>_config.yml 文件</strong>，这是属于 你的博客的<strong>配置文件</strong>，<strong>点进入一看就知道了，你可以在这里面直接修改 姓名，内容，等用户的信息</strong>。双击打开它（vscode或者其他文本编辑器，记事本都可以）</li>\n</ol>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140522637.png\" alt=\"image-20251026140522637\"></p>\n<ol>\n<li>先找一下有没有以下这段内容（我也忘记了是我添加的还是自带的），<strong>如果自带则一定是空的，则修改为如下所示，如果没有，则直接复制下面内容到 文档的末尾：</strong></li>\n</ol>\n<p><strong>user表示你的GitHub的用户名</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\"># deploy:</span><br><span class=\"line\">#   type: &#x27;&#x27;</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/username/username.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  # message: Site updated: &#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>说明：类型是 git，远程 ssh连接是 你的 repo输入项，branch 输入gh-pages。</strong></p>\n<p>另外，找到 第16行（或者直接搜索 url）修改url 为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://username.github.io</span><br></pre></td></tr></table></figure>\n\n<p>同样username是你的GitHub的用户名。</p>\n<ol>\n<li>完成后，保存文件并且退出，在 git bash中输入以下命令：</li>\n</ol>\n<p><strong>表示安装 git部署命令工具</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>最后输入以下三行命令：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。</p>\n<p><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写</p>\n<p><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>\n<p><strong>如果是在离线端即 localhost:4000端测试你的博客，则只需要 hexo g + hexo s 即可，无需 hexo d</strong></p>\n<ol>\n<li>输入完成后会出现一堆内容，不用管他**，只要最后内容如下所示，**就表示成功了！</li>\n</ol>\n<p><img src=\"/post/hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/image-20251026140538306.png\" alt=\"image-20251026140538306\"></p>\n<p>然后你就可以在</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username.github.io  # https://username.github.io</span><br></pre></td></tr></table></figure>\n\n<p><strong>访问到你的博客了，其中username是你GitHub用户名，这个网站不是离线的，其他人都可以访问到！！！</strong></p>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n\n<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>生成静态文件。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-d</code>, <code>--deploy</code></td>\n<td align=\"left\">文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-w</code>, <code>--watch</code></td>\n<td align=\"left\">监视文件变动</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-b</code>, <code>--bail</code></td>\n<td align=\"left\">生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-f</code>, <code>--force</code></td>\n<td align=\"left\">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>-c</code>, <code>--concurrency</code></td>\n<td align=\"left\">最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为</p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-p</code>, <code>--port</code></td>\n<td align=\"left\">重设端口</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-s</code>, <code>--static</code></td>\n<td align=\"left\">只使用静态文件</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-l</code>, <code>--log</code></td>\n<td align=\"left\">启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p><strong>部署网站，构建在GitHub的服务器中。</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-g</code>, <code>--generate</code></td>\n<td align=\"left\">部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n\n<p>命令配合使用，重新构建网站（release）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"Hexo快速搭建 Hexo+Next部署github搭建个人博客+优化全过程（完整详细版） 前置内容 git 的下载： 官网下载较慢，这边推荐阿里镜像下载： 阿...","permalink":"/post/hexo快速搭建","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"框架","slug":"框架","count":2,"path":"api/categories/框架.json"}],"tags":[{"name":"hexo","slug":"hexo","count":2,"path":"api/tags/hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hexo-Next%E9%83%A8%E7%BD%B2github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E4%BC%98%E5%8C%96%E5%85%A8%E8%BF%87%E7%A8%8B%EF%BC%88%E5%AE%8C%E6%95%B4%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89\"><span class=\"toc-text\">Hexo+Next部署github搭建个人博客+优化全过程（完整详细版）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#clean\"><span class=\"toc-text\">clean</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#generate\"><span class=\"toc-text\">generate</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#server\"><span class=\"toc-text\">server</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#deploy\"><span class=\"toc-text\">deploy</span></a></li></ol></li></ol></li></ol>","author":{"name":"Azer","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"<span style='font-size:30px;background:linear-gradient(90deg,#00c6ff,#0072ff);-webkit-background-clip:text;-webkit-text-fill-color:transparent;'>怀民亦未寝</span><span style='font-size:30px;'>💕</span>","socials":{"github":"https://github.com/azer-2025","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_52541129?type=blog","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1764589563?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/azzzer"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"vue_vite2项目的构建","uid":"b30be1be519f5bf3e895d94c6885064f","slug":"vite2-project","date":"2025-10-25T03:45:27.000Z","updated":"2025-10-26T06:07:01.650Z","comments":true,"path":"api/articles/vite2-project.json","keywords":"VUE、Python、JAVA","cover":"/medias/vite.png","text":"1.安装nodejs（建议装16，18版本稳定）下载 | Node.js 中文网 装完之后会有一个命令叫 npm 可以在终端输入npm -v 来检查是否安装成功...","permalink":"/post/vite2-project","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":1,"path":"api/categories/前端.json"}],"tags":[{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"},{"name":"插件","slug":"插件","count":2,"path":"api/tags/插件.json"}],"author":{"name":"Azer","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"<span style='font-size:30px;background:linear-gradient(90deg,#00c6ff,#0072ff);-webkit-background-clip:text;-webkit-text-fill-color:transparent;'>怀民亦未寝</span><span style='font-size:30px;'>💕</span>","socials":{"github":"https://github.com/azer-2025","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_52541129?type=blog","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1764589563?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/azzzer"}}}},"feature":true}}